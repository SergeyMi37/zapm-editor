ROUTINE %ZAPM.bs.BSCi
%BSCi ;ФУНКЦИИ ПРИЛОЖЕНИЙ ; 17:12   03.01.2002
 ;
 ; Copyright (c) Serge W. Mikhaylenko
 ; All Rights Reserved
 ;
 q
c(X,D) //ДЛЯ EXCEL
 Q $TR(+$TR($FN(X,"P",D)," ",""),".",",")
 
KeySort(KD4,KD5) ;KK,k1,k2,k3,k4,k5,k6,k7,k8,k9)
 ;S TX=$P($G(^["FON"]AsIKodNVC(1,k3)),"~",4)
 N TT,Ks4,Ks5
 S Ks4=$G(k4) I Ks4'="",KD4'="" d
 .I '$D(@("^[""FON""]AsIKod"_KD4)@(33)) D Creat33("^[""FON""]AsIKod"_KD4) 
 .S Ks4=$G(@("^[""FON""]AsIKod"_KD4)@(33,k4))
 .I Ks4="" S Ks4=$G(k4)
 S Ks5=$G(k5) I Ks5'="",KD5'="" d
 .I '$D(@("^[""FON""]AsIKod"_KD5)@(33)) D Creat33("^[""FON""]AsIKod"_KD5) 
 .S Ks5=$G(@("^[""FON""]AsIKod"_KD5)@(33,k5))
 .I Ks5="" S Ks5=$G(k5)
 S TT=$G(k2,"?")_"_"_$P($G(^["FON"]AsIKodNVC(1,k3)),"~",4)_"_"_$TR($J(Ks4,8)," ","0")_"_"_$TR($J(Ks5,8)," ","0")_"_$_"_$g(k1)_"_"_$g(k2)_"_"_$g(k3)_"_"_$g(k4)_"_"_$g(k5)
 I $D(@zr)
 Q TT
Creat33(GS) //создать 33 уровень для сортировки
 N I,D,K S I="",D=$G(@GS@(3)) F  S I=$O(@GS@(3,I)) Q:I=""  S K=$P(@GS@(3,I),D,1) I K'="" S @GS@(33,K)=I
 q
KeyS(K) I $L(K)=1 Q "00"
GetKey(NK,KD) N T,TT S (TT,T)=$G(@("k"_NK)) //УНИВЕРСАЛЬНАЯ ФУНКЦИЯ ДЛЯ СПИСКОВ НОВОГО ТАБЕЛЯ
 I NK=3 D
 .I '$D(BSokov1) D VARHIST^%ZAPM.bs.BSCAsIs4 N I F I=1:1:3 s @("BSokov"_I)=+$G(@BDHIST@("ReportParametrCustom",BST,I))
 .N T1,T2,T3 S TT=$G(@("^[""FON""]AsIKod"_KD)@(1,T))
 .I BSokov2 S T2="("_$P(TT,"~",2)_")"
 .I BSokov3 S T3="В/Ч "_T
 .I BSokov1 S T1=$P(TT,"~",1) S TT=T1_$G(T2)_$G(T3)
 .E  S TT=$G(T3)_$G(T2)
 I NK>3 D
 .N TX
 .I KD="NPP" Q
 .S TX=$G(@("^[""FON""]AsIKod"_KD_"s")@(1,T)) I TX'="" S TT=TX Q
 .I TX="" S TX=$G(@("^[""FON""]AsIKod"_KD)@(1,T))
 .S TT=$TR("("_T_") "_TX," ","_")
 
 ;I '$D(Fname) S Fname="N:\123.TXT" I $ZU(140,4,Fname)'=0 O Fname:"UWN" U Fname W "-----",! W  W "-------",! C Fname
 
 I $D(@zr)
 Q TT
GetTableBS(%N1,%N2,%N3,%N4,%N5) ;МОДУЛЬ ВЫВОДА ТЕКСТА ИЛИ ТАБЛИЦЫ ДЛЯ B4Y
 N A,GT,nx,DEL,S
 I %N1="" Q "?1"
 S GT=$$TMPG^%ZAPM.bs.BSF11,DEL=$C(0)
 S A=$$BS2EXCEL(%N1,GT,1,1000,DEL,%N2,%N3,%N4,%N5)
 I '$G(@GT) Q "?2"
 S S="<pre>",nx="" F  S nx=$O(@GT@(nx)) Q:nx=""  S A=$G(@GT@(nx)) I A'="" F ny=1:1 Q:$P(A,DEL,ny,ny+1)=""  S S=S_"<nobr>"_$P(A,DEL,ny)_"</nobr><br>"
 Q S_"</pre>"
 ;BS 2 EXCEL
BS2EXCEL(TABLE,GT,CourVV,BYTE,Delim,%NY1,%NY2,%NX1,%NX2,calconly) ;BS TO EXCEL ПРИЛОЖЕНИЕ ДЛЯ CACHE'  Bs2Exc.exe  !!!!!!! МОДУЛЬ ДУБЛИРОВАН ИЗ ^%ZAPM.bs.BSHTML
 N KBT,TIX,TIY,TIT,TISH,XB,YB,XE,YE,X,Y,I,SD,B,YT,XT,YXT,YdT,XdT,ASD,BS,ny,nx,d,d0,d1,LNG,N,NN,NNN,KS,BSR,BST,TIP,S1,S2,TableAlive
 K:$G(%NY1)="" %NY1 K:$G(%NY2)="" %NY2 K:$G(%NX1)="" %NX1 K:$G(%NX2)="" %NX2
 S (S2,S1)="" I $$IFDOS^%ZAPM.bs.BSHTML1($G(@TABLE)) D  ;ПЕРЕКОДИРОВАТЬ
 .D INIT^%ZAPM.bs.BSre($G(CourVV,1)) S TableAlive=1 ;!!!!!!ДЛЯ ФУНКЦИИ $$TIN^%ZAPM.bs.BSsFUNR
 S LNG=$G(BYTE,1000),N=0,NN="",KS=0,DEL=$G(Delim,$C(1))
 S BSR=$P(TABLE,"("),BST=$QS(TABLE,1),TIP=$P(@TABLE,"@",17)
 S KBT=0,TIY=1,TIX=1,TISH=+$P($G(@TABLE@("ExcelOut")),",",3)
 L +@BSR@(BST):0 E  S @GT@(1)="",@GT@(2)="   Таблица занята другим пользователем",N=2,KBT=$L(@GT@(2)) G bs2
 L -@BSR@(BST)
 D BS2TIT I $G(@BSR@(BST,"RSM"))'="" D XM^%ZAPM.bs.BSre(@$ZR) ;ВЫПОЛНИТЬ КОМАНДУ ВОССТАНОВЛЕНИЯ
 I $D(@BSR@(BST,"FCL")) D CALC^%ZAPM.bs.BSF3 //         ПЕРЕСчИТАТЬ ФОРМУЛЫ```
 ;????s @BSR@(BST,"calc")=$h //флаг о том что пересчитали формулы для EXcel загузчика
 i $g(calconly) q "calconly"
 F ny=$G(%NY1,1):1:$G(%NY2,999999) Q:'$D(@TABLE@(ny))  K S D
 .I TIP=5 S S(1)=$G(@TABLE@(ny)) ;ЭТО ТЕКСТ
 .E  Q:'$P(@TABLE@(ny,1),"@",3)  F nx=$G(%NX1,1):1:$G(%NX2,999999) Q:'$D(@TABLE@(ny,nx))  I $P(@TABLE@(ny,nx),"@",4) D
 ..I $P(TIT,",")=ny&($P(TIT,",",2)=nx) S TIX=$L($G(S(1)))+1,TIY=KS
 ..D CELL
 .S nx="" F  S nx=$O(S(nx)) Q:nx=""  S NNN=$TR(S(nx),S1,S2),KBT=KBT+$L(NNN) D
 ..I ($L(NN)+$L(NNN))>LNG S N=N+1,@GT@(N)=$E(NN,1,$L(NN)-$L(DEL)),NN=""
 ..S NN=NN_NNN_DEL,KS=KS+1
bs2 S N=N+1,@GT@(N)=$E(NN,1,$L(NN)-$L(DEL)),@GT=KS
 S P4="$"_$S(TISH'=0:TISH,1:TIY-2)_":$"_TIY
 S P5=TIX
 S P6=TIY+1 ;ТИТУЛ ПО СТРОКАМ
 S P7=$TR(BST,":!"_$C(34)_"[]","__")
 S P8=KBT ;КОЛ-БАЙТ
 S P9=$R(9)_$R(9)_$R(9)_".txt"
 D U^%ZAPM.bs.BS3($NA(@BSR@(BST))) //СНЯТЬ ЛОКИРОВКУ
 Q +N
 ;BS 2 EXCEL
BS2EXCELold(TABLE,GT,CourVV,BYTE,Delim) ;BS TO EXCEL ПРИЛОЖЕНИЕ ДЛЯ CACHE'  Bs2Exc.exe  !!!!!!! МОДУЛЬ ДУБЛИРОВАН ИЗ ^%ZAPM.bs.BSHTML
 N KBT,TIX,TIY,TIT,TISH,XB,YB,XE,YE,X,Y,I,SD,B,YT,XT,YXT,YdT,XdT,ASD,BS,ny,nx,d,d0,d1,LNG,N,NN,NNN,KS,BSR,BST,TIP,S1,S2,TableAlive
 S (S2,S1)="" I $$IFDOS^%ZAPM.bs.BSHTML1($G(@TABLE)) D  ;ПЕРЕКОДИРОВАТЬ
 .D INIT^%ZAPM.bs.BSre($G(CourVV,1)) S TableAlive=1 ;!!!!!!ДЛЯ ФУНКЦИИ $$TIN^%ZAPM.bs.BSsFUNR
 S LNG=$G(BYTE,1000),N=0,NN="",KS=0,DEL=$G(Delim,$C(1))
 S BSR=$P(TABLE,"("),BST=$QS(TABLE,1),TIP=$P(@TABLE,"@",17)
 S KBT=0,TIY=1,TIX=1,TISH=+$P($G(@TABLE@("ExcelOut")),",",3)
 D BS2TIT
 F ny=1:1 Q:'$D(@TABLE@(ny))  K S D
 .I TIP=5 S S(1)=$G(@TABLE@(ny)) ;ЭТО ТЕКСТ
 .E  Q:'$P(@TABLE@(ny,1),"@",3)  F nx=1:1 Q:'$D(@TABLE@(ny,nx))  I $P(@TABLE@(ny,nx),"@",4) D
 ..I $P(TIT,",")=ny&($P(TIT,",",2)=nx) S TIX=$L($G(S(1)))+1,TIY=KS
 ..D CELL
 .S nx="" F  S nx=$O(S(nx)) Q:nx=""  S NNN=$TR(S(nx),S1,S2),KBT=KBT+$L(NNN) D
 ..I ($L(NN)+$L(NNN))>LNG S N=N+1,@GT@(N)=$E(NN,1,$L(NN)-$L(DEL)),NN=""
 ..S NN=NN_NNN_DEL,KS=KS+1
 S N=N+1,@GT@(N)=$E(NN,1,$L(NN)-$L(DEL)),@GT=KS
 S P4="$"_$S(TISH'=0:TISH,1:TIY-2)_":$"_TIY
 S P5=TIX
 S P6=TIY+1 ;ТИТУЛ ПО СТРОКАМ
 S P7=$TR(BST,":!"_$C(34)_"[]","__")
 S P8=KBT ;КОЛ-БАЙТ
 S P9=$R(9)_$R(9)_$R(9)_".txt"
 Q +N
BS2TIT S TIT="1,1"
 I $P(@TABLE,"@",19) S TIT=$P(@TABLE,"@",19)
 E  I $P(@TABLE,"@",50) S TIT=$P(@TABLE,"@",50)
 Q
celltra(BSR,BST,ny,nx) N L,X,S,d,d1,d0 D CELLL Q d1
CELL ;ДАННЫЕ КЛЕТКИ !!!!!!! МОДУЛЬ ДУБЛИРОВАН ИЗ ^%ZAPM.bs.BSHTML -- А ТАМ УДАЛЕН!!!
	;УЩЕ ЕСТЬ АНАЛОГИЧНЫЕ ДУБЛИ В ^%ZAPM.bs.BSTM,^%ZAPM.bs.BST
 N L,BS
CELLL S BS=@BSR@(BST,ny,nx)
 I $P(BS,"@",9)=1 S (d1,d,d0)=$P(BS,"@",15)
 E  S (d1,d,d0)=$G(^%ZAPM.bs.BSbufB("BB"_$G(%BS(3),$P)_$J_"u"_$G(%BS(15),1),ny,nx))
 I $P(BS,"@",8)'="" S %zT=$ZT,$ZT="ERCEEL^%ZAPM.bs.BSCi" D  S $ZT=$G(%zT)
 .I d0="" S d0=0
 .I '$P(BS,"@",8) X $G(@(BSR_"(BST,""FTR"",ny,nx)")) Q
 .X $G(@(BSR_"(BST,""FTR"","_$P(BS,"@",8)_")"))
 S L=$P(BS,"@",3)*$P(BS,"@",4)
 F X=1:1:$P(BS,"@",3) S S(X)=$G(S(X))_$E(d1_$J("",L),X*$P(BS,"@",4)-$P(BS,"@",4)+1,$P(BS,"@",4)+($P(BS,"@",4)*(X-1)))
 Q
ERCEEL Q
NS(APP,APPVAL) ;ВСЕ ОБЛАСТИ ДЛЯ ПРИЛОЖЕНИЯ APP С ГРАНДОМ APPVAL
 n i,l,n,GS
 ;VALUE="NS1"_$C(1)_"NS2..."
 S P1=0,P2=""
 I '$$Data^%ZAPM.bs.BSF12(APPVAL) Q P2
 I $D(@APPVAL@("*")) D
 .i '$zu(90,0) Q
 .S P2="",P1=$zu(90,0)
 .f i=1:1:P1 s l($zu(90,2,0,i))=""
 .s l="" f  s l=$o(l(l)) q:l=""  I '$D(@APPVAL@("-"_l))  s P2=P2_l_$C(1)
 S l="" F  S l=$O(@APPVAL@(l)) Q:l=""  I $E(l,1)'="*",$E(l,1)'="-",'$D(l(l)) s P2=P2_$TR(l,"'",$C(34))_$C(1)
 Q $E(P2,1,$L(P2)-1)
 
BSR(NS,APP,APPVAL,TIPPA) ;ВСЕ РАЗДЕЛЫ  В ОБЛАСТИ ДЛЯ ГРАНДА ПРИЛОЖЕНИЯ
 i NS="Global Partition" Q $$LISTPART2^%ZAPM.bs.BSmirGL
 I $TR(NS," ","")="" Q ""
 ;P1=КОЛИЧЕСТВО
 ;P2=ТИПЫ_$C(1)_"...
 ;P3=КОМЕНТАРИИ_$C(1)_"...
 ;VALUE="GL1"_$C(1)_"GL2~..." МАССИВЫ
 N n,i,ii,l,KOL,PA
 S n=""
 I NS["""," S NS=$TR(NS,$C(34),"'")
 ;I NS'[",",($D(@APPVAL@(NS,"*"))!($D(@APPVAL@("*")))) 
 //все глобали
 S n=$$GD^%ZAPM.bs.BSCp(NS,$G(TIPPA,"P ;"))  ;ВСЕ ГЛОБАЛИ В НС
 S l=n I '$D(P1) Q "~"
 S l="",ii="" f  s ii=$O(@n@(ii)) q:ii=""  s PA(ii)=""
 // не приложение
 I 0,$D(@APPVAL@(NS)) D
 .S ii="" f  s ii=$O(PA(ii)) Q:ii=""  I $D(@APPVAL@(NS,"-"_ii))  K PA(ii)
 .S i="" F  S i=$O(@APPVAL@(NS,i)) Q:i=""  I $E(i,1)'="*",$E(i,1)'="-",'$D(PA(i)) s PA(i)=""
 S P2="",P3="",P1=0,i="",l="" F  S i=$O(PA(i)) Q:i=""  D
 .S P1=P1+1,l=l_i_$C(1)
 .S P2=P2_"P"_$C(1) ;ТИПЫ
 .S P3=P3_$P($$TIP^%ZAPM.bs.BSCp(i,1),"@",2)_$C(1) ;КОМЕНТАРИИ
 S P3=$$OEM2ANSI^%ZAPM.bs.BSCp(P3) ;ПЕРЕКОДИРОВАТЬ
 Q $E(l,1,$L(l)-1)
 
BST(BSR,APP,APPVAL,gP)  ;ВСЕ таблицы %BS В разделе BSR ДЛЯ APPVAL
 i $G(gP)="Global Partition" Q $$LISTTAB^%ZAPM.bs.BSmirGL(BSR)
 ;P1=КОЛИЧЕСТВО ТАБЛИЦ
 ;VALUE="T1"_$C(1)_"T2~..."
 S P1=0,(P3,P2,P4)=""
 N n,i,ii,S1,S2,MAS,NS
 S MAS=$P($P(BSR,"]",2),"(",1),NS=$TR($P($P(BSR,"""]",1),"[""",2),$C(34),"'")
 S (n,i)="" F  S i=$O(@BSR@(i)) Q:i=""  d
 .I $D(@APPVAL@(NS,MAS,"-"_i)) Q
 .S n=n_i_$C(1),P1=P1+1,ii=$G(@BSR@(i))
 .S P4=P4_$P(ii,"@",17)_$C(1)              ;ТИПЫ
 .S P2=P2_$$TIP^%ZAPM.bs.BS($P(ii,"@",17))_$C(1)  ;ТЕКСТ ТИПОВ
 .S P3=P3_$P(ii,"@")_$C(1)               ;КОМЕНТАРИИ
 S (S2,S1)="" I $$IFDOS^%ZAPM.bs.BSHTML1(P3) D  ;ПЕРЕКОДИРОВАТЬ
 .K S1,S2 I $$ANSI^%ZAPM.bs.BSre("")
 .S P3=$TR(P3,S1,S2),P2=$TR(P2,S1,S2),n=$TR(n,S1,S2)
 Q n
 
indexlist(index,total,GL) ;
 i index>@t s VALUE="",P4="" q
 s name=$g(@t@(0,index-1)) ;go back by one
 s VALUE="",P4="",P5="",P6="" I GL'["(" S P5=$G(@GL,$C(1))
 f i=1:1:total s name=$o(@GL@(name)) q:name=""  d
 .s VALUE=VALUE_name_$c(10)
 .s P4=P4_$G(@GL@(name),$C(1))_$c(0)
 .s P6=P6_$d(@GL@(name))_$c(0)
 q
Na(GL,I) i I="" S P9=$D(@GL) q GL
 s P9=$d(@GL@(I))
 q $NA(@GL@(I))
 ;
getname(index) ;
 s name=$g(@t@(0,index))
 Q name
 ;
X(x,P1,P2,P3,P4,P5,P6,P7,P8,P9) ;ВЫПОЛНИТЬ
 X x
 Q
F4(G,I,S) ;ПРИСВАИВАНИЕ
 S @G@(I)=S
 Q
getindex(name) ;
 i name="" q 0
 i $d(@t@(1,name)) q @t@(1,name)
 s name=$o(@t@(1,name))
 i name="" q @t+1
 q @t@(1,name)
 ;
ReInit(g) k ^temBS(g_"¤"_$j) L -@g q
init(g,PAR) k ^temBS(g_"¤"_$j) s t=$zr L +@g
 n n,i
 I g="" S P7=0,(P1,P2,P3,VALUE)="" Q
 s t=$zr
 s n="" f i=0:1 s n=$o(@g@(n)) q:n=""  d
 .s @t@(0,i)=n
 .s @t@(1,n)=i
 s (P7,@t)=i-1 ;всего узлов массива
 S VALUE=$$Data^%ZAPM.bs.BSF12(PAR) I VALUE S P1="Трансформация",P2="Значения ключа",P3="Вид представления индексов в списке" Q
 S P1="Потоком",P2="По индексам",P3="Проход по массиву" Q
 q
Save(I,A) ;СОХРАНИТЬ
 S ^%ZAPM.bs.BSCfg(I,$J)=A
 Q
Rest(I)  ;ВОСТАНОВИТЬ
 Q $G(^%ZAPM.bs.BSCfg(I,$J))
ASK() //ПОКАЗАТЬ ПРИГЛАШЕНИЕ К ВВОДУ ФАЙЛА PR1=DFLT   Q 0   НЕТ
 ;%FN,%DEV НАДО ВЕРНУТЬ С ОТКРЫТЬ ДЛЯ ЗАПИСИ
 Q 1
ADDD(S) //ДОБАВИТЬ ДИСК К ПУТИ
 Q $TR($G(^%ZAPM.bs.BS("DriveISS"),"N:\InfoPortal\")_S,"/","\")
