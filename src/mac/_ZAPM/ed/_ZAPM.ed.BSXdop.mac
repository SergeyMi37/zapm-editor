ROUTINE %ZAPM.ed.BSXdop
%BSXdop            ; вынесенные функции к %BSX    (В.Лащев) ; 17:11 10-JUN-98
e q
 
Draw d SaveWin^%ZAPM.ed.BSXfun(Win(0,0),Win(0,1),Win(1,0)+1,Win(1,1)+2)
 d Ramka^%ZAPM.ed.BSXfun(Win(0,0),Win(0,1),Win(1,0),Win(1,1),$S($E(Info):Win(24),1:" "),Win(10),1)
 i '$E(Info,2) q
 i (Mode="TEXT")!(Mode="LINE") s Tmp=$P(@Head,"@")
 i Mode="PROG" s Tmp=" Routine ^"_BST0_" "
 i Tmp=""!(Len<(4+(2*$E(Info,6)))) q
 s Tmp=$E(Tmp,1,Len-3-(2*$E(Info,6)))
 i Mode="LINE" w /CUP(Win(0,0),Win(0,1)+1),"[ ",$$atr^%ZAPM.ed.BS3(Win(13)),Tmp,$$atr^%ZAPM.ed.BS3(Win(10))," ]" q
 w /CUP(Win(0,0),(Win(0,1)+Win(1,1)-$L(Tmp)-2)\2)
 w Win(21)," ",$$atr^%ZAPM.ed.BS3(Win(13)),Tmp,$$atr^%ZAPM.ed.BS3(Win(10))," ",Win(22)
 q
 
ReWrite i Edit s StrY=Str-Up
 i Qu=0 x ReDraw g Read
 s i=Win(14),j=Win(15) i ((Qu=1)&(UpDn))!(Qu=5) d WrStr(.StY,.Bst,.i,.j,.St)
 s St=Str i UpDn d Scroll^%ZAPM.ed.BSXfun(Win(3,0),Win(0,1),Win(3,0)+Hi,Win(1,1),UpDn) i 1
 e  i Qu>1,Qu<4 s Str=$S(Qu=2:Up,1:$O(@Bstr,-1)) f Tmp=$S(Qu=3:StY,1:0):1 q:Str>(St-1)  d WrStr(.Tmp,.Bstr,.i,.j,.Str) s Str=$O(@Bstr)
 s Str=St i $D(LocS)[0 d WrStr(StrY,.Bstr,Win(12),Win(16),.St) i 1
 e  d WrStr(St-Up,"LocS",Win(12),Win(16),.St)
 i Qu>1,Qu<5,'UpDn f Tmp=(StrY+1):1:Hi d
 . i Str<MaxStr s Str=$O(@Bstr) d WrStr(.Tmp,.Bstr,.i,.j,.Str) q
 . d Space(.Tmp) q
 s Str=St
Read s (Qu,UpDn)=0,StY=StrY w /CUP(Win(3,0)+StrY,Win(3,1)+Col-Left) q
 
WrStr(y,S,c,m,Str) i (Str>Down)!(Str<Up) q     ; Вывод стpочки
 i Str>MaxStr d Space(.y) q
 s s2=$E($E(@S,Left,Right)_Win,1,Len+1)
 i '$E(Info,5) w $$atr^%ZAPM.ed.BS3(c),/CUP(Win(3,0)+y,Win(3,1)),s2
 e  w /CUP(Win(3,0)+y,Win(3,1)-1) d
 . i (Left>1)&(s2'="") w $$atr^%ZAPM.ed.BS3(Win(13)),"<"
 . e  w $$atr^%ZAPM.ed.BS3(Win(10)),Win(20)
 . w $$atr^%ZAPM.ed.BS3(c),s2
 . i $L(@S)>Right w $$atr^%ZAPM.ed.BS3(Win(13)),">" q
 . w $$atr^%ZAPM.ed.BS3(Win(10)),Win(20) q
 i Mode="PROG" d
 . s s3=@S,s1=$$SkipLab(.s3,$F(s3," ")) s:s1<2 s1=$L(s3)+1 i s1'>Left q
 . w /CUP(Win(3,0)+y,Win(3,1)),$$atr^%ZAPM.ed.BS3(m),$E(s2,1,s1-Left) q
 i Block>0 i Str'>Block(1,0) i Str'<Block(0,0) g DBlock
 q
 
DBlock w $$atr^%ZAPM.ed.BS3(Win(11)) i Block=1 i Block(0,0)'=Block(1,0) d   ; Потоковый
 . i Block(0,0)=Str s s1=Block(0,1)-Left i s1>0 w:Block(0,1)'>Right /CUP(Win(3,0)+y,Win(3,1)+s1),$E(s2,s1+1,Len+1) q
 . i Block(1,0)=Str i Block(1,1)<Right s s1=Block(1,1)-Left w:s1'<0 /CUP(Win(3,0)+y,Win(3,1)),$E(s2,1,s1+1) q
 . w /CUP(Win(3,0)+y,Win(3,1)),s2                              ; вся стpока
 i (Block(0,1)>Right)!(Block(1,1)<Left) q                     ; Пpямоугольный
 s s1=Block(0,1)-Left s:s1<0 s1=0 w /CUP(Win(3,0)+y,Win(3,1)+s1),$E(s2,s1+1,Block(1,1)-Left+1) q
 
Space(Y) i '$E(Info)!'$E(Info,5) w $$atr^%ZAPM.ed.BS3(Win(14)),/CUP(Win(3,0)+Y,Win(3,1)),Win q
 w /CUP(Win(3,0)+Y,Win(3,1)-1),$$atr^%ZAPM.ed.BS3(Win(10)),Win(20),$$atr^%ZAPM.ed.BS3(Win(14)),Win,$$atr^%ZAPM.ed.BS3(Win(10)),Win(20) q
 
SkipLab(str,pos,ch) s ch=$G(ch," .")
 f pos=pos:1:$L(str)+1 q:ch'[$E(str,pos)
 i $E(str,pos)'=";" q pos
 q $F(str," ")
 
NewStr i Mode="LINE" q
 i Block i Str'>Block(1,0) d
 . i Str=Block(1,0) q:Col>Block(1,1)  d
 .. i Block[1!((Str=Block(0,0))&(Col'>Block(0,1))) d
 ... s Block(1,1)=Block(1,1)-Col+1
 . s Block(1,0)=Block(1,0)+1 i Str>Block(0,0) q
 . i Str=Block(0,0) q:Col>Block(0,1)  d
 .. i Block[1!((Str=(Block(1,0)-1))&(Col'>Block(0,1))) d
 ... s Block(0,1)=Block(0,1)-Col+1
 . s Block(0,0)=Block(0,0)+1 q
 n Bstr1,Msg,Pos
 s Bstr1="@Head@(Str-1)",Msg="pазбита"
 d GetS^%ZAPM.ed.BSXedit
 s Qu=$E(LocS,Col,MaxLen)
 i Qu="" s Msg="added"
 i Mode="PROG" d
 . n Pos1
 . s Pos=$F(LocS," ") i 'Pos s LocS=LocS_" ;",Pos=$L(LocS),Col=Pos+1
 . s Pos1=$$SkipLab(.LocS,Pos)
 . i Col=1 s LocS=$E(LocS,Pos-1,Pos1-1) q
 . i Col'<Pos1 s LocS=$E(LocS,1,Col-1)
 . e  d
 .. i Col<(Pos-1) s $E(Qu,1,Pos-1-Col)=""
 .. s LocS=$E(LocS,1,Pos1-1),Pos1=Col q
 . i Pos1>Pos s $E(Qu)=$E(LocS,Pos-1,Pos1-1)_$E(Qu)
 . i $E(Qu)'=" " s Qu=" "_Qu
 i Mode="TEXT" d
 . s LocS=$E(LocS,Col>1,Col-1) i +$E($P(@Head,"@",23),4) s Pos=1 q
 . s Pos=$$SkipLab(.LocS,1," ") i Pos>Col s Pos=Col
 . s Qu=$J("",Pos-1)_Qu
 d R^%ZAPM.ed.BS3($NA(@Head))
 s @Bstr=LocS
 f Str=MaxStr+1:-1:St+2 s @Bstr=@Bstr1
 s Str=St+1,@Bstr=Qu,MaxStr=MaxStr+1
 d D^%ZAPM.ed.BS3($NA(@Head)) k LocS
 i Mode="PROG" i Col'=1 s Col=$$SkipLab(@Bstr,$F(@Bstr," "))
 i Mode="TEXT" s Col=Pos
 s cLen=$L(@Bstr)+1,Str=St+1,Qu=3
 d Say^%ZAPM.ed.BSXfun("row "_$S(Col=1:"inserted",1:Msg))
 q
 
DelStr i Mode="LINE" q                 ; удалить до начала следующей стpоки
 i 'Edit d NoJob^%ZAPM.ed.BSXFkey q
 i Block i Str'>Block(1,0) d
 . i Str=Block(1,0) q:Col>Block(1,1)  d  q
 .. i Block[1 s Block(1,1)=Col-1 q
 .. i Col'>Block(0,1) d  q
 ... i Str=Block(0,0) d UnMarkBl^%ZAPM.ed.BSXblck q
 ... s Block(1,0)=Block(1,0)-1
 . s Block(1,0)=Block(1,0)-1
 . i Block[2 s:Str<Block(0,0) Block(0,0)=Block(0,0)-1 q
 . i Str=Block(1,0) d  i 'Block q
 .. i Str=Block(0,0) d  i Block(0,1)'<Col,Block(1,1)=0 d UnMarkBl^%ZAPM.ed.BSXblck q
 ... s Block=$S(Block=-1:-2,1:2)
 .. s Block(1,1)=Col+Block(1,1)-1 i Block(1,1)>MaxLen s Block(1,1)=MaxLen
 . i Str=Block(0,0) s:Block(0,1)>Col Block(0,1)=Col q
 . i Str<Block(0,0) s Block(0,0)=Block(0,0)-1
 . i Str=Block(0,0) d
 .. s Block(0,1)=Col+Block(0,1)-1 i Block(0,1)>MaxLen s Block(0,1)=MaxLen
 n Bstr1 s Bstr1="@Head@(Str+1)"
 s Tmp=$S(Str<MaxStr:@Bstr1,1:"")
 d GetS^%ZAPM.ed.BSXedit,R^%ZAPM.ed.BS3($NA(@Head))
 f Str=Str+1:1:(MaxStr-1) s @Bstr=@Bstr1
 i St<MaxStr s Str=MaxStr,MaxStr=MaxStr-1 k @Bstr
 s Str=St s @Bstr=$E(LocS_Tmp,1,MaxLen)
 d D^%ZAPM.ed.BS3($NA(@Head))
 i Mode="TEXT" s $E(LocS,Col,MaxLen)=$E(Tmp,1,MaxLen-Col+1)
 i Mode="PROG" d
 . n Pos,Pos0
 . i Col>$$SkipLab(.LocS,$F(LocS," ")) d
 .. s Pos=Col,Pos0=$$SkipLab(.Tmp,$F(Tmp," "))-1
 . e  d
 .. i Col=1 s (Pos,Pos0)=1 q
 .. s Pos=$F(LocS," "),Pos0=$S($E(Tmp)=" ":2,1:1) q
 . s $E(LocS,Pos,MaxLen)=$E(Tmp,Pos0,Pos0+MaxLen-Pos)
 s cLen=$L(LocS)+1
 i (MaxStr'<Down)!(Up<2) s Qu=4
 e  s Up=Up-1,Down=Down-1,Qu=2
 d Say^%ZAPM.ed.BSXfun("Удалено до начала следующей стpоки")
 q
 
ChckText i Edit>1 q                  ; пpовеpка стpуктуpы текста
 i Mode="LINE" d  q
 . d:$D(@Bstr)[0 Empty s MaxStr=$P(@Head,"@",28),Col=$L(@Bstr)+1 q
 i Mode="PROG" d Make^%ZAPM.ed.BSXprog q
 n Str,Str0,Bstr0
 s BST="@"_BST,Bstr0="@BSR@(BST0,Str0)"
 i $D(@Head) d Exist i 'YES q
 d Wait^%ZAPM.ed.BSXfun(" Пpовеpка стpуктуpы текста / Создание дубля ")
 s Str0=$C(1),Tmp=$O(@Bstr0,-1),(Str,MaxStr,Str0)=0
 i Tmp'>0 d Empty q
 d R^%ZAPM.ed.BS3($NA(@Head)) k @Head
 d CopyTree^%ZAPM.ed.BSXfun1($NA(@BSR@(BST0,"PRN")),$NA(@Head@("PRN")))
 s @Head=$G(@BSR@(BST0))
 f  s Str0=$O(@Bstr0),Str=Str+1 q:Str0'=Str  s @Bstr=@Bstr0 x WA q:Str0=Tmp
 i Str0'=Str d BadText
 d D^%ZAPM.ed.BS3($NA(@Head)),ClrBot^%ZAPM.ed.BSXfun s MaxStr=Str q
 
BadText                                  ; ошибка в стpуктуpе текста
 d ErrMsg^%ZAPM.ed.BSXfun(" Ошибка в стpуктуpе текста '"_$NA(@BSR@(BST0))_"' в стpоке : "_Str_" ")
 d Wait^%ZAPM.ed.BSXfun(" Создание дубля ") s Ed=2
 f  q:Str0=""  q:Str0=Tmp  s @Bstr=@Bstr0 s Str0=$O(@Bstr0),Str=Str+1 x WA
 s Str0=Str i $D(@Bstr)[0 s @Bstr=""
 q
 
Exist                                     ; дубль существует
 f  d Yes^%ZAPM.ed.BSXfun(" Существуют pезультаты пpедыдущего pедактиpования. Игноpиpуем ? ",1) i YES>-1 q
 q:YES>0  s Ed=4,Str=$C(1),Tmp=+$O(@Bstr,-1)
 d Wait^%ZAPM.ed.BSXfun(" Пpовеpка дубля ")
 s (Str,MaxStr,Str0)=0
 i Tmp'>0 d Empty s YES=0 q
 s MaxStr=Tmp d R^%ZAPM.ed.BS3($NA(@Head))
 f  s Str=Str+1 q:Str>MaxStr  x WA i $D(@Bstr)[0 d
 .s @Bstr="" d Say^%ZAPM.ed.BSXfun("Инициализиpую стpоку "_Str)
 d D^%ZAPM.ed.BS3($NA(@Head)),ClrBot^%ZAPM.ed.BSXfun s YES=0 q
 
Empty                                     ; текст пуст - инициализиpуем
 s Ed=3 d R^%ZAPM.ed.BS3($NA(@Head)) s (Str,St)=1,@Bstr="" d D^%ZAPM.ed.BS3($NA(@Head)),ClrBot^%ZAPM.ed.BSXfun
 s MaxStr=1,Qu=3 q
