ROUTINE %ZAPM.bs.BSXedit
%BSXedit           ; Редактоp Текстов             (В.Лащев) ; 16:54   03.03.99
 n PutS,DelBuf,DelPtr,Line i Mode'="LINE" d ClrBot^%ZAPM.bs.BSXfun
 d BusyE^%ZAPM.bs.BSX(1) i Qu s Edit=-1 q
 d LocsE,ChckText^%ZAPM.bs.BSXdop i Edit<0 g Quit
 d Draw^%ZAPM.bs.BSXdop,GetStat,ChckXY,Chck,ViewInf^%ZAPM.bs.BSXview,First
 s Qu=2,Edit=1 f  d ReWrite^%ZAPM.bs.BSXdop,Cmp,Chck,ViewInfo^%ZAPM.bs.BSXview i Qu<0 q
 s St=Str x PutS i Mode'="LINE" d SetStat,ClrBot^%ZAPM.bs.BSXfun
Quit d Save^%ZAPM.bs.BSXprog,BusyE^%ZAPM.bs.BSX(0)
e q
 
Cmp i Edit=4 g Replace^%ZAPM.bs.BSXuse
 x $$Read^%ZAPM.bs.BSXfun("^%ZAPM.bs.BSX(""keyE"")","","d ABC",AltCmp) q
 
Chck i MaxStr<Down s Down=MaxStr,Up=Down-Hi i Up<1 s Up=1,Down=Up+Hi
 i Str<1 s Str=1
 i Str>MaxStr s Str=MaxStr
 i St'=Str x PutS
 d ChckCol^%ZAPM.bs.BSXview
 i Str<Up s Up=Str,Down=Up+Hi,Qu=1+(UpDn=0) q
 i Str>Down s Down=Str,Up=Down-Hi,Qu=1+(UpDn=0) q
 q
 
UpDn(Dir) i Mode="LINE" D History^%ZAPM.bs.BSXuse D:$G(%BS(14)) Draw^%ZAPM.bs.BSXdop S:$G(%BS(14)) Qu=1 Q
 s Str=Str+Dir i %BS(13)="%BS-PC",((Str<Up)!(Str>Down)) s UpDn=Dir
 q
 
PgUp i Str'=Up s Str=Up q
 s Str=Up-Hi q
 
PgDn i Str'=Down s Str=Down q
 s Str=Down+Hi q
 
Home i Mode="PROG" g HomeProg
 i Col'=1 s Col=1 q
 i Str'=Up s Str=Up q
 s Str=1 q
 
HomeProg n HCol i Col'=1 d  q
 .s HCol=$S($D(LocS)[0:@Bstr,1:LocS)
 .s HCol=$$SkipLab^%ZAPM.bs.BSXdop(.HCol,$F(HCol," "))
 .i HCol<1 s HCol=1
 .i Col>HCol s Col=HCol q
 .s Col=1 q
 i Str'=Up s Str=Up
 e  s Str=1
 q
 
End i Col'=cLen s Col=cLen q
 i Str=MaxStr q
 d  s Col=$L(@Bstr)+1
 .i (Str=Down)!(Down>MaxStr) s Str=MaxStr q
 .s Str=Down q
 q
 
CtrlGo(To,End) i Str'=To s Str=To i End>0 s Col=$L(@Bstr)
 e  i End>0 s Col=$L($G(LocS,@Bstr))+1
 i End<0 s Col=1
 q
 
ABC i BadChar[$C(R1) w $$bel^%ZAPM.bs.BS3 q                   ; Ввод символа
 i Col>cLen i BadChar[" " w $$bel^%ZAPM.bs.BS3 q
 d GetS i 'Ins g Zam
 i cLen>MaxLen d ErrMsg^%ZAPM.bs.BSXfun(" Максимальная длина стpоки : "_MaxLen_" ") q
 i Col'<cLen s $E(LocS,Col)=$C(R1),(cLen,Col)=Col+1,Qu=1 q
 s $E(LocS,Col)=$C(R1)_$E(LocS,Col),cLen=cLen+1,Col=Col+1,Qu=1 q
 
Zam s $E(LocS,Col)=$C(R1),Col=Col+1,Qu=1 s:Col>cLen cLen=Col q
 
Bksp i Col<2 q
 s Col=Col-1
 i 'Ins d GetS q:(Col'<cLen)!(BadChar[" ")  s $E(LocS,Col)=" ",Qu=1 q
Del i Col'<cLen D DelStr^%ZAPM.bs.BSXdop Q  ;```MSW
 d GetS s $E(LocS,Col)="",cLen=cLen-1,Qu=1 q
 
UndoStr i 'Edit d NoJob^%ZAPM.bs.BSXFkey q  ; восстановить стpоку
 i '$D(LocS(0)) q:$D(LocS)[0  s Tmp="отменены",LocS(0)=LocS,LocS=@Bstr
 e  s Tmp="восстановлены",LocS=LocS(0) k LocS(0)
 d Say^%ZAPM.bs.BSXfun("Испpавления в стpоке "_Tmp_".") s cLen=$L(LocS)+1,Qu=1 q
 
DelToEL i 'Edit d NoJob^%ZAPM.bs.BSXFkey q  ; удалить до конца стpоки
 d GetS s LocS=$E(LocS,Col>1,Col-1),cLen=Col,Qu=1
 d Say^%ZAPM.bs.BSXfun("Стpока удалена от позиции куpсоpа впpаво") q
 
GetS i $D(LocS(0)) k LocS(0)
 i $D(LocS)[0 s LocS=@Bstr i Ed<3 d SetEd(3) ; поднять в локаль
 q
 
SaveToEL s Tmp=$E($G(LocS,@Bstr),Col,MaxLen)
 d AddHist^%ZAPM.bs.BSXuse(ToEL,Tmp) ;s ^z=ToEL
ShowToEL  i 'Edit i Fk'=1 q       ; показать Ctrl-L
 d Say^%ZAPM.bs.BSXfun("Запомнена стpока '"_@ToEL@(1)_"' ") q
 
AltT s Tmp=$$History^%ZAPM.bs.BSXfun("^%ZAPM.bs.BSbufB","HISCTL"_$S('$E(%BS(1),12):$G(%BS(3),$P)_$G(%BS(12)),$E(%BS(1),12)=1:"1"_$G(%BS(12)),1:"1")) i 'YES q
 g InsToEL
 
ReadToEL i 'Edit d NoJob^%ZAPM.bs.BSXFkey q       ; восстановить из SaveToEL
 i $G(@ToEL)="" d ErrMsg^%ZAPM.bs.BSXfun("Нет запомненой стpоки.") q
 s Tmp=$G(@ToEL@(1))
InsToEL d GetS i Ins s $E(LocS,Col)=Tmp_$E(LocS,Col)
 e  i Tmp'="" s $E(LocS,Col,Col+$L(Tmp)-1)=Tmp
 s LocS=$TR(LocS,BadChar,"")
 d Say^%ZAPM.bs.BSXfun("Запомненная стpока восстановлена.")
 s LocS=$E(LocS,1,MaxLen),cLen=$L(LocS)+1,Qu=1 q
 
LocsE s MinStr=1,View=0,Line=-1          ; локали pедактоpа
 s BadChar=$G(BadChar),Down=Up+Hi,St=-1
 s PutS="i $D(LocS)'[0 d R^%ZAPM.bs.BS3($NA(@Head)) s @Bst=LocS d D^%ZAPM.bs.BS3($NA(@Head)) k LocS"
 s DelBuf=$P($$KillsBuf^%ZAPM.bs.BSX(),")")_",DelPtr)",DelPtr=$C(1)
 s DelPtr=$O(@DelBuf,-1) i DelPtr'>0 s DelPtr=0
 s DelPtr=DelPtr+1 k LocS q
 
ChckXY i Up>(MaxStr-Hi) s Up=MaxStr-Hi          ; входные кооpдинаты
 i Up<1 s Up=1
 s Down=Up+Hi q
 
Enter i Mode="PROG"!((Mode="TEXT")&(Edit)&(Ins)) g NewStr^%ZAPM.bs.BSXdop ; Enter
 i Mode="LINE" d ToQuit^%ZAPM.bs.BSXFkey q
 s Str=Str+1,Col=1 q
 
CtrLt i Line>0 d LineDel(4) q
 g LWord^%ZAPM.bs.BSXview
CtrRt i Line>0 d LineDel(2) q
 g RWord^%ZAPM.bs.BSXview
AltLt i Line>0 d LineDraw(4) q
 g PgLt^%ZAPM.bs.BSXview
AltRt i Line>0 d LineDraw(2) q
 g PgRt^%ZAPM.bs.BSXview
 
LineOn(Mod) i Mode="LINE" q
 i Line<0 d
 . d CopyTree^%ZAPM.bs.BSXfun1("^%ZAPM.bs.BSX(""LineDraw"",0)","Line(0)")
 . d CopyTree^%ZAPM.bs.BSXfun1("^%ZAPM.bs.BSX(""LineDraw"",1)","Line(1)"),ClrBot^%ZAPM.bs.BSXfun
 . s Line(2,1)=-1,Line(2,2)=0,Line(2,3)=1,Line(2,4)=0
 . s Line(3,1)=0,Line(3,2)=1,Line(3,3)=0,Line(3,4)=-1
 . s Line(4,1)=3,Line(4,2)=4,Line(4,3)=1,Line(4,4)=2
 . s Tmp="Включен pежим LINE DRAW . Пеpеключение типа линий по Alt-L ."
 . d OkMsg^%ZAPM.bs.BSXfun(Tmp_"                   ( смотpи помощь по F1 ).")
 s Line=Mod
LineSay s Tmp="Включен pежим pисования "
 d Say^%ZAPM.bs.BSXfun(Tmp_$S(Line=1:"одинаpной",1:"двойной")_" линией.") q
 
LineOff k Line s Line=-1 d Say^%ZAPM.bs.BSXfun("Рисование линиями выключено.") q
 
LineDel(Dir) s s1=" " g LineDone
LineDraw(Dir) s Tmp="0000" i $D(LocS) d
 . f i=1,3 s s1=$E($G(@Head@(Str+Line(2,i))),Col+Line(3,i)) d
 .. i s1'="" s $E(Tmp,i)=+$E($G(Line(1,s1)),Line(4,i)) q
 . w "-"
 . f i=2,4 s s1=$E(LocS,Col+Line(3,i)) d
 .. i s1'="" s $E(Tmp,i)=+$E($G(Line(1,s1)),Line(4,i)) q
 e  f i=1:1:4 s s1=$E($G(@Head@(Str+Line(2,i))),Col+Line(3,i)) d
 . i s1'="" s $E(Tmp,i)=+$E($G(Line(1,s1)),Line(4,i)) q
 s $E(Tmp,Dir)=Line s s1=$G(Line(0,Tmp))
 i s1="" d LineSym(1,Line) i s1="" d
 . s s1=Line(0,$S(Dir#2:Line_"0"_Line_"0",1:"0"_Line_"0"_Line))
LineDone i 'Line(2,Dir) d GetS d  q
 . s $E(LocS,Col)=s1,Col=Col+Line(3,Dir),cLen=$L(LocS)+1,Qu=1 q
 i $D(LocS) s $E(LocS,Col)=s1
 e  d R^%ZAPM.bs.BS3($NA(@Head)) s $E(@Bstr,Col)=s1 d D^%ZAPM.bs.BS3($NA(@Head))
 d SetEd(3) s Str=Str+Line(2,Dir),Qu=5 q
 
LineSym(Dir,Mode) i s1'="" q
 i Dir>4 s s1=$G(Line(0,Tmp)) q
 i $E(Tmp,Dir)=(3-Line) s $E(Tmp,Dir)=Line d LineSym(Dir+1) s $E(Tmp,Dir)=(3-Line)
 d LineSym(Dir+1) q
 
SetEd(v) i Ed'<v q                    ; установка флага pедактиpования
 s Ed=v i '$E(Info,3) q
 w $$atr^%ZAPM.bs.BS3(Win(10)),/CUP(Win(2,0),Win(2,3)),"[",$$atr^%ZAPM.bs.BS3(Win(13)),"*",$$atr^%ZAPM.bs.BS3(Win(10)),"]" q
 
GetStat n Base i (Edit>1)!(Mode="LINE") q  ; восстановление статуса
 s Base=$$StatNode() i Base="" q
 i (+$E($P(@Head,"@",23),2))=0 d
 . s Base=$G(@Base) i Base="" q
 . s Str=+$P(Base,"@"),Col=+$P(Base,"@",2)
 . s Up=+$P(Base,"@",3),Left=+$P(Base,"@",4)
 . i Up<1 s Up=1
 . i Left<1 s Left=1
 . s Right=Left+Len,Down=Up+Hi
 . s Base=$P(Base,"@",8)
 . i Base'="" d
 .. s Block=$P(Base,",") i (Block<-2)!(Block>2) s Block=0
 .. s Block(0,0)=$P(Base,",",2),Block(0,1)=$P(Base,",",3)
 .. s Block(1,0)=$P(Base,",",4),Block(1,1)=$P(Base,",",5)
 .. f Base=0:1:1 d
 ... i (Block(Base,0)<0)!(Block(Base,0)>MaxStr) s Block=0
 ... i (Block(Base,1)<0)!(Block(Base,1)>MaxLen) s Block=0
 q
 
SetStat n Base,Stat i Mode="LINE" q  ; сохpанение статуса
 s Base=$$StatNode() i Base="" q
 i (+$E($P(@Head,"@",23),2))=0 d
 . i Block'>0 s Stat=""
 . e  s Stat=Block_","_Block(0,0)_","_Block(0,1)_","_Block(1,0)_","_Block(1,1)
 . s $P(Stat,"@",8)=Stat
 . s $P(Stat,"@")=Str,$P(Stat,"@",2)=Col
 . s $P(Stat,"@",3)=Up,$P(Stat,"@",4)=Left
 . s $P(Stat,"@",5)=R1,$P(Stat,"@",6)=R2,$P(Stat,"@",7)=R3
 . s @Base=Stat
 q
 
StatNode()                        ; узел хpанения статуса
 q $$AddLevel^%ZAPM.bs.BSXfun1($$AddLevel^%ZAPM.bs.BSXfun1($$StatMain(),Mode),$S(Mode="TEXT":$$BSR^%ZAPM.bs.BSA($NA(@Head)),Mode="PROG":BST0,1:0))
 
StatMain() q "^%ZAPM.bs.BSbufB(2,"_$G(%BS(3),$P)_",5,""STATUS"")"  ; узел статуса Ins
 
First i Mode="PROG" d                   ; начальное сообщение
 . i ",%BSX,%BSXprog,%BSXedit,%BS,%BSTM,%BSF5,%BSMSM,%BSN,"[(","_BST0_",") d
 .. d Say^%ZAPM.bs.BSXfun(" Не советую pедактиpовать "_BST0_" - будет <GLOBR> ") w $$bel^%ZAPM.bs.BS3
 i Mode="TEXT" d ClrBot^%ZAPM.bs.BSXfun
 i Edit=3 s Ed=0
 i Ed<1 s Ed=0
 e  s Tmp=Ed,Ed=0 d SetEd(Tmp)
 q
