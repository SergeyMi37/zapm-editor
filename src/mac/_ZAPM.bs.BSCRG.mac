ROUTINE %ZAPM.bs.BSCRG
%BSCRG ;Cache Relational Gateway - Functions ; 18:28   06.04.2003
 ;
 ; Copyright (c) Serge W. Mikhaylenko
 ; All Rights Reserved
 ;
 Q
 ;/////////////////////////// BStempSQL...//////////////////////////
RUN() ;запустить из VISM.ocx
 ;ВХОДНЫЕ ПЕРЕМЕННЫЕ
 ;P1=Data Sours Name
 ;P2=Name User
 ;P3=Password
 ;P4=SQL
 Q $$DSN(P1,P2,P3,P4)
 ;ВЫХОДНЫЕ ПЕРЕМЕННЫЕ
 ;P5=Second EXECUTIVE
 ;P6=Error
 ;P7=Time
 ;P8=Colomn
 ;P9=Rows
TEST ;ТЕСТЫ
 N DSN,SQL
 ;S DSN="EXZ",SQL="SELECT EKZ_VOP.TEXT_V, EKZ_OTV.TEXT_O FROM EKZ_VOP INNER JOIN EKZ_OTV ON EKZ_VOP.N_NOM = EKZ_OTV.N_VOP"
 ;S DSN="ISSBASE",SQL="SELECT [ConnectRazdel]![Pred] & ' ' & [STR_MENU]![HTML] & ' ' & [ConnectRazdel]![Post] AS HTML_STRING FROM (WORKGROUPS INNER JOIN (STR_MENU INNER JOIN ConnectRazdel ON STR_MENU.Kod = ConnectRazdel.PunktMenu) ON WORKGROUPS.ID_WORKGROUP = ConnectRazdel.Workgroup) INNER JOIN SOTR ON WORKGROUPS.ID_WORKGROUP = SOTR.WORKGROUP WHERE SOTR.NET_NAME='hodov' ORDER BY STR_MENU.Nomer"
 S DSN="KSP",SQL="SELECT * FROM KNH"
 W $$DSN(DSN,"","",SQL)
 Q
DSN(DSN,NAME,PASS,SQL) ;ВЫПОЛНЕНИЕ ЗАПРОСА И ФОРМИРОВАНИЕ УЗЛА ОБЕКТОВ
 N Con,Res,Sc,Pid,i,ErrOR,COL,JJ ;,P5,P6,P7,P8,P9
 s Pid=$I_","_$J ;ИДЕНТИФИКАТОР ПРОЦЕССА
 ;ПЕРЕЙТИ В СИСТЕМНЫЙ СПЭЙС
 I $zu(5,"%SYS")
 ;ВЫПОЛНЕНИЕ ЗАПРОСА
 S Con=##Class(%SQLGatewayConnection).%New()
 S Sc=Con.Connect(DSN,NAME,PASS)
 S Res=##Class(%ResultSet).%New("%DynamicQueryGW:SQLGW")
 K ^["%SYS"]BStempSql(Pid)
 S ^["%SYS"]BStempSql(Pid,"SQL",1)=SQL
 S ^["%SYS"]BStempSql(Pid,"SQL",2)=$ZD($H,9)
 S P5=$P($H,",",2)
 s Sc=Res.Prepare(SQL,,Con)
 I 'Res.QueryIsValid() S ErrOR="Недопустимый Запрос" G DSNend
 s Sc=Res.Execute()
 I 'Sc S ErrOR=$$Status(Sc) G DSNend
 S COL=Res.GetColumnCount()
 F J=1:1:COL S ^["%SYS"]BStempSql(Pid,"NAM",J)=Res.GetColumnName(J)
 ;F J=1:1:COL S ^["%SYS"]BStempSql(Pid,"HDR",J)=Res.GetColumnHeader(J)
 ;f i=1:1:10001 q:'Res.Next()  I i<5001 d                                         ;ОГРАНИЧЕНИЯ
 f i=1:1 q:'Res.Next()  D
 .F J=1:1:COL S JJ=Res.GetData(J) I JJ'="" S ^["%SYS"]BStempSql(Pid,i,J)=JJ
 S P6=$P($H,",",2),P5=P6-P5
 S ^["%SYS"]BStempSql(Pid,"SQL",3)=P5
 S (P8,^["%SYS"]BStempSql(Pid,"SQL",7))=COL ;КОЛ-ВО КОЛОНОК
 S (P9,^["%SYS"]BStempSql(Pid,"SQL",8))=i-1 ;КОЛ-ВО СТРОК
 S (P7,^["%SYS"]BStempSql(Pid,"SQL",5))=$ZT($P($H,",",2),1)
DSNend S (P6,^["%SYS"]BStempSql(Pid,"SQL",6))=$G(ErrOR)
 d Res.%Close()
 d Con.Disconnect()
 d Con.%Close()
 Q Pid ;ИДЕНТИФИКАТОР ПРОЦЕССА
Status(sc) ;СТАТУС
 N err,i,st1
 I ('sc) D  Q st1
 .D DecomposeStatus^%apiOBJ(sc,.err)
 .S st1="" F i=1:1:err S st1=st1_err(i)_". "
 Q ""
KILL(P) ;УДАЛЕНИЕ УЗЛА
 I $G(P)'="",$D(^["%SYS"]BStempSql(P)) K ^(P) Q 1
 Q 0
ROWS(P) ;КОЛ-ВО СТРОК
 I $G(P)'="" Q $G(^["%SYS"]BStempSql(P,"SQL",8))
 Q 0
SEC(P) ;КОЛ-ВО СЕКУНД
 I $G(P)'="" Q $G(^["%SYS"]BStempSql(P,"SQL",3))
 Q ""
COLS(P) ;КОЛ-ВО КОЛОНОК
 I $G(P)'="" Q $G(^["%SYS"]BStempSql(P,"SQL",7))
 Q 0
ERRORS(P) ;ОШИБКИ
 I $G(P)'="" Q $G(^["%SYS"]BStempSql(P,"SQL",6))
 Q 0
 ;///////////////////////////////////////////////////////
STREAM(DSN,USER,PASS) ;ВСЕ ТАБЛИЦЫ DSN КОПИРОВАТЬ В РАЗДЕЛ PART И ЗАГРУЗИТЬ ДАННЫЕ
 N PxPUSTO,AUTO
 D DSN2PART^%ZAPM.bs.BSCRG(DSN,"",$G(USER),$G(PASS))
 D PART2BSD^%ZAPM.bs.BSCRG("^"_DSN)
 S PxPUSTO="" D ALLPART^%ZAPM.bs.BSCBD("^"_DSN)
 D DSN2BS^%ZAPM.bs.BSCRG(DSN,$G(USER),$G(PASS))
 Q
DSN2PART(DSN,PART,USER,PASS) ;ВСЕ ТАБЛИЦЫ DSN КОПИРОВАТЬ В РАЗДЕЛ PART
 I $G(PART)="" S PART="^"_DSN
 N WEBSQL,I,II,flag
 I $$DescDsn(DSN)'="" s ErV=1 q
 I $P($G(@PART),"@",1)'="BaSe MsW " S @PART="BaSe MsW @Раздел таблиц импортированных из DSN="_DSN
 S I="0" F  S I=$O(WEBSQL(I)) Q:I=""  I WEBSQL(I,2)="TABLE" s flag=1 D TABLE2T(DSN,WEBSQL(I,1),$NA(@PART@($$TRANAME(WEBSQL(I,1)))),$G(USER),$G(PASS))
 i '$d(flag) s ErV=1
 Q
TABLE2T(DSN,TAB,GLO,USER,PASS) ;СТРУКТУРУ ТАБЛИЦЫ В ТАБЛИЦУ %BS
 N GL,I,St,S,NAME,NAME1,TAB1,N,BSR,BST,se,ke
 S S="^%ZAPM.bs.BSC(""BSG"")"
 S St=$$DescCol(DSN,$G(USER),$G(PASS),TAB,"GL")
 K @GLO S @GLO=St
 I St'="" Q
 ;ZW GL Q
 S St=TAB_"=",@GLO=@S,@GLO@(1,1)=@S@(1,1),@GLO@(1,2)=@S@(1,2)
 ;W S Q
 S $P(@GLO@(1,1),"@",15)=" DSN:"_DSN,$P(@GLO@(1,2),"@",15)=" TABLE:"_TAB
 S TAB1=$$TRANAME(TAB)
 ;W TAB1
 S I="" F N=1:1 S I=$O(GL(0,I)) Q:I=""  S NAME=GL(0,I),NAME1=$$TRANAME(NAME),@GLO@("DSN",NAME)=NAME1 D
 .S @GLO@(N+1,1)=@S@(2,1),@GLO@(N+1,2)=@S@(2,2)
 .S $P(@GLO@(N+1,1),"@",15)=NAME,$P(@GLO@(N+1,2),"@",18)=NAME1,St=St_NAME1_",",$P(@GLO@(N+1,2),"@",9)=1
 ;W 222 Q
 S $P(@GLO,"@",1)=St,$P(@GLO,"@",17)=1,@GLO@("DSN")=TAB
 S BSR=$QS(GLO,0),BST=$QS(GLO,1),ke=2,se=N ;D RESZER^%ZAPM.bs.BSF2
 D TABm^%ZAPM.bs.BSF1
 Q
TRANAME(N) Q $TR(N,"_/\","vso")      ;ТРАНСЛЯЦИЯ ИМЕН ТАБЛИЦ И ПОЛЕЙ
PART2BSD(PART,TAB) ;TAB="" --> ВСЕ ТАБЛИЦЫ РАЗДЕЛА СДЕЛАТЬ БАЗАМИ (1-1 КЛЮЧ, 2=2 КЛЮЧ И Т.Д.)
 N TA
 I $G(TAB)'="" D TA2BD(PART,TAB)
 S TA="" F  S TA=$O(@PART@(TA)) Q:TA=""  D TA2BD(PART,TA)
 Q
TA2BD(BSR,BST,NOBD,InDx) ;СДЕЛАТЬ БАЗАМИ //новая редакция
 N K,KK,S,BD,nk
 I '$D(@BSR@(BST,"DSN")) S Errors="Таблица не для DSN" Q
 S S="^%ZAPM.bs.BSC(""BSG"")"
 F K=2:1 Q:'$D(@BSR@(BST,K,2))  D
 .I $P(@BSR@(BST,K,2),"@",15)'="" d  q  ;идексы не должны совпадать
 ..d SetKK(+$P(@BSR@(BST,K,2),"@",15),$P(@BSR@(BST,K,1),"@",15),$p($P(@BSR@(BST,K,2),"@",18),"#",1),$P(@BSR@(BST,K,2),"@",21),$P(@BSR@(BST,K,2),"@",17))
 ..S $P(@BSR@(BST,K,2),"@",9)=1
 .;S $P(@BSR@(BST,K,2),"@",15)="" ;НЕ НАДО УДАЛЯТЬ
 .S $P(@BSR@(BST,K,2),"@",9)=2
 I '$D(NOBD) S BD=BSR_"."_BST K @BD,@BSR@(BST,"KEY") S @BD="BSD - MSW@"_BSR_"@"_BST S @BSR@(BST,"KEY")=BD
 S $P(@BSR@(BST),"@",17)=2
 S K="" F NK=1:1 S K=$O(KK(K)) Q:K=""  D NEWKEY($p(KK(K),"@",1),$p(KK(K),"@",2),$p(KK(K),"@",3),$p(KK(K),"@",4))
 F nk=NK:1:9 K @BSR@(BST,"KEY",nk) //УДАЛИТЬ СТАРЫЕ КЛЮЧИ
 I '$G(InDx) D NEWKEY("BSiD","BSiD",0,"")
 D SNX^%ZAPM.bs.BSChT1("S",$TR($NA(@BSR@(BST)),"@",""),"TABLE")
 Q
SetKK(i,s,f,t,d) f  q:'$d(KK(i))  s i=i+0.01
 s KK(i)=s_"@"_f_"@"_t_"@"_d
 q
NEWKEY(N,f,t,d) S @BSR@(BST,"KEY",NK)=@S@("KEY",1)
 S $P(@BSR@(BST,"KEY",NK),"@",5)="НОВОЕ ЗНАЧЕНИЕ "_N,$P(@BSR@(BST,"KEY",NK),"@",9)=NK_" ИНДЕКС"
 S $P(@BSR@(BST,"KEY",NK),"@",15)=N
 S $P(@BSR@(BST,"KEY",NK),"@",22)=f,$P(@BSR@(BST,"KEY",NK),"@",21)=t,$P(@BSR@(BST,"KEY",NK),"@",17)=d
 Q
DSN2BS(DSN,USER,PASS,PART) ;ЗАКАЧАТЬ ИНФОРМАЦИЮ ИЗ DSN В BS-БАЗУ (только 4 ключевую)
 I $G(PART)="" S PART="^"_DSN
 I '$D(@PART) S ErrOR="НЕТ РАЗДЕЛА "_PART Q
 N WEBSQL,I,II
 I $$DescDsn(DSN,$G(USER),$G(PASS))'="" Q
 S I="0" F  S I=$O(WEBSQL(I)) Q:I=""  I WEBSQL(I,2)="TABLE" D
 .D TAB2BSD(DSN,$G(USER),$G(PASS),WEBSQL(I,1),PART,$$TRANAME(WEBSQL(I,1)))
 .;D x^%ZAPM.bs.BS3($G(ErrOR,1))     ;---//--- для msm 4.x.x
 Q
TAB2BSD(DSN,USER,PASS,TAB,PART,TOBD) ;ЗАКАЧАТЬ ИНФОРМАЦИЮ ИЗ ТАБЛИЦЫ В БАЗУ
 N I,Con,Res,Sc,Pid,i,COL,J,JJ,clist,column,info,BD,K,K1,K2,K3,K4,K5,K6,K7,K8,K9,ARR,KEY,KK,XX
 ;ВЫПОЛНЕНИЕ ЗАПРОСА
 S Con=##Class(%SQLGatewayConnection).%New()
 S Sc=Con.Connect(DSN,$G(USER),$G(PASS))
 I 'Sc S ErrOR=$$Status(Sc) G TDsNend
 S Res=##Class(%ResultSet).%New("%DynamicQueryGW:SQLGW")
 S SQL="SELECT * FROM "_TAB
 s Sc=Res.Prepare(SQL,,Con)
 I 'Res.QueryIsValid() S ErrOR="Недопустимый Запрос" G TDsNend
 s Sc=Res.Execute()
 I 'Sc S ErrOR=$$Status(Sc) G TDsNend
 S COL=Res.GetColumnCount()
 F J=1:1:COL S ARR(0,J)=Res.GetColumnName(J),ARR(1,ARR(0,J))=J
 I $G(@PART@(TOBD,"DSN"))'=TAB S ErrOR="Несоответсвие полей таблицы "_$ZR_" -> "_TAB G TDsNend
 S BD=$P(@PART@(TOBD,"KEY"),"@",1)
 F KEY=1:1 Q:'$D(@PART@(TOBD,"KEY",KEY))  S KK(KEY)=$P($P(@PART@(TOBD,"KEY",KEY),"@",5),"НИЕ ",2)
 F K=1:1 Q:'$D(KK(K))  S POLE=KK(K) I POLE'="BSiD" S ARR(2,K)=ARR(1,POLE)
 S KEY=KEY-1
 F J=1:1:COL S ARR(0,J)=$G(@PART@(TOBD,"DSN",ARR(0,J)))
 f iD=1:1 q:'Res.Next()  D  ;Q:iD>50
 .I '$G(AUTO) W " ",iD
 .I KEY=1 S XX="S @BD@(iD,ARR(0,J))=JJ"
 .I KEY=2 S XX="S K1=Res.GetData(ARR(2,1)) S:K1="""" K1=""ZERRO"" S @BD@(K1,iD,ARR(0,J))=JJ"
 .I KEY=3 S XX="S K1=Res.GetData(ARR(2,1)) S:K1="""" K1=""ZERRO"" S K2=Res.GetData(ARR(2,2)) S:K2="""" K2=""ZERRO"" S @BD@(K1,K2,iD,ARR(0,J))=JJ"
 .I KEY=4 S XX="S K1=Res.GetData(ARR(2,1)) S:K1="""" K1=""ZERRO"" S K2=Res.GetData(ARR(2,2)) S:K2="""" K2=""ZERRO"" S K3=Res.GetData(ARR(2,3)) S:K3="""" K3=""ZERRO"" S @BD@(K1,K2,K3,iD,ARR(0,J))=JJ"
 .I KEY=5 S XX="S K1=Res.GetData(ARR(2,1)) S:K1="""" K1=""ZERRO"" S K2=Res.GetData(ARR(2,2)) S:K2="""" K2=""ZERRO"" S K3=Res.GetData(ARR(2,3)) S:K3="""" K3=""ZERRO"" S K4=Res.GetData(ARR(2,4)) S:K4="""" K4=""ZERRO"" S @BD@(K1,K2,K3,K4,iD,ARR(0,J))=JJ"
 .I KEY=6 S XX="S K1=Res.GetData(ARR(2,1)) S:K1="""" K1=""ZERRO"" S K2=Res.GetData(ARR(2,2)) S:K2="""" K2=""ZERRO"" S K3=Res.GetData(ARR(2,3)) S:K3="""" K3=""ZERRO"" S K4=Res.GetData(ARR(2,4)) S:K4="""" K4=""ZERRO"" S K5=Res.GetData(ARR(2,5)) S:K5="""" K5=""ZERRO"" S @BD@(K1,K2,K3,K4,K5,iD,ARR(0,J))=JJ"
 .I KEY=7 S XX="S K1=Res.GetData(ARR(2,1)) S:K1="""" K1=""ZERRO"" S K2=Res.GetData(ARR(2,2)) S:K2="""" K2=""ZERRO"" S K3=Res.GetData(ARR(2,3)) S:K3="""" K3=""ZERRO"" S K4=Res.GetData(ARR(2,4)) S:K4="""" K4=""ZERRO"" S K5=Res.GetData(ARR(2,5)) S:K5="""" K5=""ZERRO"" S K6=Res.GetData(ARR(2,6)) S:K6="""" K6=""ZERRO"" S @BD@(K1,K2,K3,K4,K5,K6,iD,ARR(0,J))=JJ"
 .I KEY=8 S XX="S K1=Res.GetData(ARR(2,1)) S:K1="""" K1=""ZERRO"" S K2=Res.GetData(ARR(2,2)) S:K2="""" K2=""ZERRO"" S K3=Res.GetData(ARR(2,3)) S:K3="""" K3=""ZERRO"" S K4=Res.GetData(ARR(2,4)) S:K4="""" K4=""ZERRO"" S K5=Res.GetData(ARR(2,5)) S:K5="""" K5=""ZERRO"" S K6=Res.GetData(ARR(2,6)) S:K6="""" K6=""ZERRO"" S K7=Res.GetData(ARR(2,7)) S:K7="""" K7=""ZERRO"" S @BD@(K1,K2,K3,K4,K5,K6,K7,iD,ARR(0,J))=JJ"
 .I KEY=9 S XX="S K1=Res.GetData(ARR(2,1)) S:K1="""" K1=""ZERRO"" S K2=Res.GetData(ARR(2,2)) S:K2="""" K2=""ZERRO"" S K3=Res.GetData(ARR(2,3)) S:K3="""" K3=""ZERRO"" S K4=Res.GetData(ARR(2,4)) S:K4="""" K4=""ZERRO"" S K5=Res.GetData(ARR(2,5)) S:K5="""" K5=""ZERRO"" S K6=Res.GetData(ARR(2,6)) S:K6="""" K6=""ZERRO"" S K7=Res.GetData(ARR(2,7)) S:K7="""" K7=""ZERRO"" S K8=Res.GetData(ARR(2,8)) S:K8="""" K8=""ZERRO"" S @BD@(K1,K2,K3,K4,K5,K6,K7,K8,iD,ARR(0,J))=JJ"
 .F J=1:1:COL I ARR(0,J)'="" S JJ=Res.GetData(J) I JJ'="" X XX
TDsNend ;КОНЕЦ
 I $D(Res) d Res.%Close()
 d Con.Disconnect()
 d Con.%Close()
 Q $G(ErrOR)
 Q
 ;///////////////////////////
DescDsn(DSN,USER,PASS) ;СОСТАВ DSN
 D intDSN^%ZAPM.bs.BSCG(DSN,$G(USER),$G(PASS))
 Q $G(ErV)
DescCol(DSN,USER,PASS,TAB,MAS) ;СОСТАВ КОЛОНОК ТАБЛИЦЫ TAB
 Q $$DsnSql(DSN,USER,PASS,"SELECT * FROM "_TAB,MAS,0,1)  ;ВЫПОЛНЕНИЕ ЗАПРОСА И ФОРМИРОВАНИЕ УЗЛА ОБЕКТОВ
DsnSql(DSN,USER,PASS,SQL,ARR,Rows,DescCol) ;ВЫПОЛНЕНИЕ ЗАПРОСА И ФОРМИРОВАНИЕ УЗЛА ОБЕКТОВ
 N Con,Res,Sc,Pid,i,ErrOR,COL,J,JJ,clist,column,info
 ;ВЫПОЛНЕНИЕ ЗАПРОСА
 S Con=##Class(%SQLGatewayConnection).%New()
 S Sc=Con.Connect(DSN,USER,PASS)
 I 'Sc S ErrOR=$$Status(Sc) G DsNend
 S Res=##Class(%ResultSet).%New("%DynamicQueryGW:SQLGW")
 s Sc=Res.Prepare(SQL,,Con)
 I 'Res.QueryIsValid() S ErrOR="Недопустимый Запрос" G DsNend
 s Sc=Res.Execute()
 I 'Sc S ErrOR=$$Status(Sc) G DsNend
 S COL=Res.GetColumnCount()
 F J=1:1:COL S @ARR@(0,J)=Res.GetColumnName(J)
 I $G(DescCol) G DsNend
 I '$G(Rows) S Rows=99999 ;ПОКА ТАК
 f i=1:1 q:'Res.Next()  I i<Rows D
 .F J=1:1:COL S JJ=Res.GetData(J) I JJ'="" S @ARR@(i,J)=JJ
DsNend ;КОНЕЦ
 I $D(Res) d Res.%Close()
 d Con.Disconnect()
 d Con.%Close()
 Q $G(ErrOR)
